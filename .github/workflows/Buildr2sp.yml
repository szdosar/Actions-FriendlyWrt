#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build r2s plus

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 8 * * 5

env:
  #REPO_URL: https://github.com/coolsnowwolf/lede
  #REPO_BRANCH: master
  #FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: fr24.config
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    #timeout-minutes: 420
    #runs-on: ubuntu-latest
    #runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        #sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo apt-get -y update
        sudo apt-get install -y sudo curl
        #disable_ipv6
        #bash <(curl -Ls https://raw.githubusercontent.com/szdosar/ish/refs/heads/master/disable_ipv6.sh)
        sudo bash -c \
          "$(curl -fsSL https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh)"
        export PATH=/opt/FriendlyARM/toolchain/11.3-aarch64/bin:$PATH
        export GCC_COLORS=auto
        git config --global user.email "szdosar@r2splus.com"
        git config --global user.name "szdosar"
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /mnt/workdir/friendlywrt24-rk3328
        sudo chown -R $USER:$GROUPS /mnt/workdir

    - name: Clone source code
      working-directory: /mnt/workdir/friendlywrt24-rk3328
      run: |
        df -hT $PWD
        git clone https://github.com/friendlyarm/repo --depth 1 tools
        tools/repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v24.10 \
        -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
        tools/repo sync -c  --no-clone-bundle
        ln -sf /mnt/workdir/friendlywrt24-rk3328 $GITHUB_WORKSPACE/friendlywrt24-rk3328
        echo "" | bash <(curl -Ls https://raw.githubusercontent.com/szdosar/ish/refs/heads/master/install_go.sh)

    - name: Clone immortalwrt
      run: |        
        cd ~
        rm -rf  ~/immortalwrt
        git clone -b openwrt-24.10 --single-branch --filter=blob:none https://github.com/immortalwrt/immortalwrt
        cd ~/immortalwrt
        sed -i '1i src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
        sed -i '2i src-git small https://github.com/kenzok8/small' feeds.conf.default
        ./scripts/feeds update -a && rm -rf feeds/luci/applications/luci-app-mosdns
        rm -rf feeds/packages/net/{alist,adguardhome,mosdns,xray*,v2ray*,v2ray*,sing*,smartdns}
        rm -rf feeds/packages/utils/v2dat
        rm -rf feeds/packages/lang/golang
        git clone https://github.com/sbwml/packages_lang_golang -b 24.x feeds/packages/lang/golang
        ./scripts/feeds install -a

    - name: Compile friendlywrt 1st
      run: |
        cd friendlywrt24-rk3328
        sed -i 's/192.168.2.1/192.168.4.1/g' friendlywrt/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
        ./build.sh nanopi_r2s.mk

    - name: Fix something
      run: |
        cd friendlywrt24-rk3328/friendlywrt
        sed -i '$a src-git passwall_packages https://github.com/sbwml/openwrt_helloworld.git' feeds.conf.default
        sed -i '$a src-git passwall2 https://github.com/xiaorouji/openwrt-passwall2.git;main' feeds.conf.default
        ./scripts/feeds update -a && rm -rf feeds/luci/applications/luci-app-mosdns
        rm -rf feeds/packages/net/{alist,adguardhome,mosdns,xray*,v2ray*,v2ray*,sing*,smartdns}
        rm -rf feeds/packages/utils/v2dat
        rm -rf feeds/packages/lang/golang
        git clone https://github.com/kenzok8/golang feeds/packages/lang/golang
        ./scripts/feeds install -a 
        cp -r ~/immortalwrt/feeds/luci/applications/{luci-app-zerotier,luci-app-vlmcsd} feeds/luci/applications/
        cp -r ~/immortalwrt/feeds/packages/net/{zerotier,vlmcsd} feeds/packages/net/
        cp -r ~/immortalwrt/feeds/kenzo/luci-app-adguardhome feeds/luci/applications/
        cp -r ~/immortalwrt/feeds/kenzo/adguardhome feeds/packages/net/
        ./scripts/feeds update -a -f && ./scripts/feeds install -a -f
        sed -i '/\/etc\/init\.d\/tailscale/d;/\/etc\/config\/tailscale/d;' feeds/packages/net/tailscale/Makefile
        git clone https://github.com/asvow/luci-app-tailscale package/luci-app-tailscale

    - name: Compile friendlywrt 2nd with custom config file
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE friendlywrt24-rk3328/friendlywrt/.config
        cd friendlywrt24-rk3328/friendlywrt
        rm -rf tmp
        make defconfig
        #make -j$(nproc)
        bash <(curl -Ls https://raw.githubusercontent.com/szdosar/ish/refs/heads/master/fix_singbox_init.sh) || true
        make -j$(nproc) || true
        bash <(curl -Ls https://raw.githubusercontent.com/szdosar/ish/refs/heads/master/fix_singbox_ech_stub.sh) || true
        make package/feeds/small/sing-box/compile || true
        make package/feeds/packages/geoview/compile || true
        make -j$(nproc)

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Packaging sd-img image
      id: compile
      run: |
        cd friendlywrt24-rk3328
        ./build.sh sd-img
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' friendlywrt/.config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: |
        df -hT
        mkdir -p r2splus
        cp friendlywrt24-rk3328/out/*.gz r2splus
        cp friendlywrt24-rk3328/friendlywrt/{.config,feeds.conf.default} r2splus

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: r2splus
        
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd r2splus
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "?? [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "?? [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Remove old Artifacts
      uses: c-hive/gha-remove-artifacts@v1.2.0
      with:
        age: '1 day'
        skip-recent: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
